// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞
function handleFiles(files) {
    if (!files.length) return;

    const formData = new FormData();
    formData.append("file", files[0]);

    // –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    document.getElementById("result").innerText = "‚è≥ –ê–Ω–∞–ª–∏–∑...";
    document.getElementById("cleanedText").innerText = "";

    // –§–∞–π–ª —á–µ—Ä–µ–∑ POST-–∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    fetch("/analyze/", {
        method: "POST",
        body: formData
    })
    .then(async res => {
        if (!res.ok) {
            const errorData = await res.json();
            throw new Error(errorData.detail || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞");
        }
        return res.json();
    })
    .then(data => {
        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        document.getElementById("result").innerText =
            data.is_spam ? "üö® –°–ü–ê–ú" : "‚úÖ –ù–ï –°–ü–ê–ú";
        document.getElementById("cleanedText").innerText = data.cleaned_text;
    })
    .catch(err => {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –µ—Å—Ç—å
        document.getElementById("result").innerText = `‚ùå ${err.message}`;
        document.getElementById("cleanedText").innerText = "";
    });
}
